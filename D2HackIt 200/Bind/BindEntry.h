////////////////////////////////////////////////////////////////////////////
// BindEntry.h
//
// Abin (abinn32@yahoo.com)
////////////////////////////////////////////////////////////////////////////

#ifndef __BINDENTRY_H__
#define __BINDENTRY_H__

#include <windows.h>

class CBindEntry
{
public:	

	///////////////////////////////////////////////////////////////////
	// Constructors & Destructor
	///////////////////////////////////////////////////////////////////
	CBindEntry();
	CBindEntry(BYTE iKeyCode, BYTE iReturnCode, LPCSTR lpszCommands = NULL);
	CBindEntry(const CBindEntry& rhs);
	virtual ~CBindEntry();

	///////////////////////////////////////////////////////////////////
	// Operators
	///////////////////////////////////////////////////////////////////
	const CBindEntry& operator=(const CBindEntry& rhs);

	///////////////////////////////////////////////////////////////////
	// Attributes & Operations
	///////////////////////////////////////////////////////////////////
	BYTE GetKeyCode() const;
	BYTE GetReturnCode() const;
	LPCSTR GetCommands() const;
	BOOL IsRotate() const;
	void SetRotate(BOOL bSet);
	void Set(BYTE iKeyCode, BYTE iReturnCode, LPCSTR lpszCommands);
	void Clear();
	void AddCommands(LPCSTR lpszCommands);
	void InvokeCommands();

private:

	///////////////////////////////////////////////////////////////////
	// Private Methods
	///////////////////////////////////////////////////////////////////
	void FreeBuffer(); // Free string buffers

	///////////////////////////////////////////////////////////////////
	// Member Data
	///////////////////////////////////////////////////////////////////
	BYTE m_iKeyCode;
	BYTE m_iReturnCode;
	BOOL m_bRotate;
	LPSTR m_pszCommands;
	LPSTR m_pszDelimited; // Delimited commands
	LPCSTR m_pszCur; // For rotate, current command position
};

#endif // __BINDENTRY_H__